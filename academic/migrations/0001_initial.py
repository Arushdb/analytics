# Generated by Django 5.2.5 on 2025-08-22 09:50

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CourseEvaluationComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_id', models.CharField(blank=True, max_length=10, null=True)),
                ('exam_date', models.CharField(blank=True, max_length=5, null=True)),
                ('date_from_display_marks', models.CharField(blank=True, max_length=5, null=True)),
                ('date_to_display_marks', models.CharField(blank=True, max_length=5, null=True)),
                ('evaluation', models.CharField(blank=True, max_length=5, null=True)),
                ('evaluation_id_name', models.CharField(blank=True, max_length=10, null=True)),
                ('group_id', models.CharField(max_length=3)),
                ('rule', models.CharField(max_length=3)),
                ('order_in_awardsheet', models.IntegerField(blank=True, null=True)),
                ('course_code', models.CharField(max_length=10)),
                ('maximum_marks', models.PositiveIntegerField()),
                ('insert_time', models.DateTimeField()),
                ('modification_time', models.DateTimeField(blank=True, null=True)),
                ('creator_id', models.CharField(max_length=20)),
                ('modifier_id', models.CharField(blank=True, max_length=20, null=True)),
                ('publish_marks', models.CharField(max_length=1)),
                ('weightage', models.PositiveIntegerField(blank=True, null=True)),
                ('component_full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('published_by', models.CharField(blank=True, max_length=20, null=True)),
                ('published_time', models.DateTimeField(blank=True, null=True)),
                ('component_type', models.CharField(max_length=4)),
            ],
            options={
                'db_table': 'course_evaluation_component',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CourseMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_code', models.CharField(max_length=8)),
                ('course_name', models.CharField(blank=True, max_length=100, null=True)),
                ('marks_cont_eval', models.PositiveIntegerField(blank=True, null=True)),
                ('marks_end_semester', models.PositiveIntegerField(blank=True, null=True)),
                ('marks_total', models.PositiveIntegerField()),
                ('course_classification', models.CharField(blank=True, db_comment='C=Core, T=Theory,P=Practical,W=Work Experience', max_length=1, null=True)),
                ('insert_time', models.DateTimeField()),
                ('modification_time', models.DateTimeField(blank=True, null=True)),
                ('creator_id', models.CharField(max_length=20)),
                ('modifier_id', models.CharField(blank=True, max_length=20, null=True)),
                ('owner_program', models.CharField(blank=True, max_length=7, null=True)),
                ('owner_branch', models.CharField(blank=True, max_length=3, null=True)),
                ('owner_specialization', models.CharField(blank=True, max_length=3, null=True)),
                ('credits', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('lectures', models.PositiveIntegerField(blank=True, null=True)),
                ('tutorials', models.PositiveIntegerField(blank=True, null=True)),
                ('practicals', models.PositiveIntegerField(blank=True, null=True)),
                ('since_session', models.CharField(max_length=7)),
                ('units', models.PositiveIntegerField(blank=True, null=True)),
                ('course_type', models.CharField(db_comment='M=Major, H=Half', max_length=2)),
                ('owner_entity', models.CharField(max_length=8)),
                ('subject_wise_group', models.CharField(blank=True, max_length=3, null=True)),
                ('result_system', models.CharField(max_length=2)),
                ('internal_external_active', models.IntegerField(blank=True, null=True)),
                ('grade_limit_active', models.IntegerField()),
                ('edei_status', models.PositiveIntegerField(blank=True, null=True)),
                ('core_course_status', models.CharField(blank=True, max_length=1, null=True)),
                ('course_from_outside', models.CharField(blank=True, db_comment='Course is from outside DEI yes or no, default is N - no', max_length=1, null=True)),
                ('outside_source_name', models.CharField(blank=True, db_comment='Name of outside university or institution or organization for reference.', max_length=150, null=True)),
            ],
            options={
                'db_table': 'course_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvaluationComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_id', models.CharField(db_comment='E01,E02', max_length=3)),
                ('id_type', models.CharField(db_comment='MK=Marks,Gr=Grade', max_length=2)),
                ('display_type', models.CharField(db_comment='I:internal,E:External', max_length=1)),
                ('insert_time', models.DateTimeField()),
                ('modification_time', models.DateTimeField(blank=True, null=True)),
                ('creator_id', models.CharField(max_length=20)),
                ('modifier_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'evaluation_component',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProgramMaster',
            fields=[
                ('program_id', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('program_code', models.CharField(max_length=4)),
                ('program_name', models.CharField(max_length=150)),
                ('program_type', models.CharField(max_length=1)),
                ('program_mode', models.CharField(max_length=1)),
                ('no_of_terms', models.PositiveIntegerField()),
                ('total_credits', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True)),
                ('number_of_attempt_allowed', models.PositiveIntegerField()),
                ('max_number_of_fail_subjects', models.PositiveIntegerField()),
                ('ug_pg', models.CharField(max_length=2)),
                ('tencodes', models.CharField(blank=True, max_length=2, null=True)),
                ('insert_time', models.DateTimeField()),
                ('modification_time', models.DateTimeField(blank=True, null=True)),
                ('creator_id', models.CharField(max_length=20)),
                ('modifier_id', models.CharField(blank=True, max_length=20, null=True)),
                ('print_aggregate', models.CharField(db_comment='TAP=theory and practical and SEM means semester aggregate', max_length=3)),
                ('branch_exists', models.IntegerField()),
                ('specialization_exists', models.IntegerField()),
                ('fixed_duration', models.CharField(max_length=1)),
                ('program_description', models.CharField(max_length=100)),
                ('dgpa', models.DecimalField(decimal_places=3, max_digits=5)),
                ('max_reg_semester', models.PositiveSmallIntegerField()),
                ('credit_required', models.PositiveIntegerField()),
                ('fixed_or_variable_credit', models.CharField(db_comment='F=Fixed credit system, V=Variable credit system', max_length=1)),
                ('domain', models.CharField(blank=True, max_length=3, null=True)),
                ('preffered_choice_allowed', models.CharField(blank=True, max_length=2, null=True)),
                ('months_duration_in_english', models.CharField(blank=True, max_length=100, null=True)),
                ('months_duration_in_hindi', models.CharField(blank=True, max_length=100, null=True)),
                ('roll_number_generation_by_order', models.CharField(blank=True, db_comment='G=Gender Wise, M=Manually, R=Regular', max_length=1, null=True)),
                ('program_hindi_name', models.CharField(blank=True, max_length=200, null=True)),
                ('active', models.CharField(max_length=4)),
                ('first_year_title', models.CharField(blank=True, max_length=50, null=True)),
                ('second_year_title', models.CharField(blank=True, max_length=50, null=True)),
                ('third_year_title', models.CharField(blank=True, max_length=50, null=True)),
                ('result_system', models.CharField(max_length=2)),
                ('isnep', models.CharField(blank=True, db_column='isNep', db_comment='if program is NEP program like B.Com, B.Sc, etc. than Y, else N', max_length=1, null=True)),
            ],
            options={
                'db_table': 'program_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roll_number', models.CharField(blank=True, max_length=16, null=True)),
                ('program_course_key', models.CharField(blank=True, max_length=16, null=True)),
                ('semester_start_date', models.DateField()),
                ('semester_end_date', models.DateField()),
                ('course_code', models.CharField(blank=True, max_length=12, null=True)),
                ('course_name', models.CharField(blank=True, max_length=100, null=True)),
                ('orginal_course_code', models.CharField(blank=True, max_length=8, null=True)),
                ('course_status', models.CharField(max_length=3)),
                ('student_status', models.CharField(blank=True, max_length=3, null=True)),
                ('insert_time', models.DateTimeField()),
                ('modification_time', models.DateTimeField(blank=True, null=True)),
                ('creator_id', models.CharField(max_length=25)),
                ('modifier_id', models.CharField(blank=True, max_length=25, null=True)),
                ('attempt_number', models.PositiveSmallIntegerField()),
                ('course_group', models.CharField(max_length=3)),
                ('entity_id', models.CharField(max_length=8)),
                ('old_student_status', models.CharField(blank=True, max_length=3, null=True)),
                ('credits', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'student_course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentMarks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university_code', models.CharField(max_length=4)),
                ('entity_id', models.CharField(max_length=8)),
                ('roll_number', models.CharField(max_length=10)),
                ('program_course_key', models.CharField(max_length=14)),
                ('evaluation_id', models.CharField(max_length=3)),
                ('marks', models.PositiveIntegerField(blank=True, null=True)),
                ('old_marks', models.CharField(blank=True, max_length=10, null=True)),
                ('grades', models.CharField(blank=True, max_length=2, null=True)),
                ('pass_fail', models.CharField(blank=True, max_length=3, null=True)),
                ('status', models.CharField(blank=True, max_length=3, null=True)),
                ('course_code', models.CharField(max_length=8)),
                ('semester_start_date', models.DateField()),
                ('semester_end_date', models.DateField()),
                ('insert_time', models.DateField()),
                ('modification_time', models.DateField(blank=True, null=True)),
                ('creator_id', models.CharField(max_length=20)),
                ('modifier_id', models.CharField(blank=True, max_length=80, null=True)),
                ('attempt_number', models.PositiveIntegerField()),
                ('requested_marks', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('requester_remarks', models.CharField(blank=True, max_length=250, null=True)),
                ('issue_status', models.CharField(blank=True, max_length=3, null=True)),
                ('teacher_remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('attendence', models.CharField(blank=True, max_length=4, null=True)),
            ],
            options={
                'db_table': 'student_marks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentMarksSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.CharField(max_length=8)),
                ('roll_number', models.CharField(blank=True, max_length=10, null=True)),
                ('program_course_key', models.CharField(blank=True, max_length=16, null=True)),
                ('semester_start_date', models.DateField()),
                ('semester_end_date', models.DateField()),
                ('total_internal', models.PositiveIntegerField(blank=True, null=True)),
                ('total_external', models.PositiveIntegerField(blank=True, null=True)),
                ('total_marks', models.PositiveIntegerField(blank=True, null=True)),
                ('course_code', models.CharField(blank=True, max_length=10, null=True)),
                ('internal_grade', models.CharField(blank=True, db_comment='Total Internal grade', max_length=3, null=True)),
                ('external_grade', models.CharField(blank=True, db_comment='Total External  grade', max_length=3, null=True)),
                ('final_grade_point', models.DecimalField(blank=True, db_comment='Avg grade for course', decimal_places=3, max_digits=6, null=True)),
                ('insert_time', models.DateTimeField()),
                ('modification_time', models.DateTimeField(blank=True, null=True)),
                ('creator_id', models.CharField(max_length=20)),
                ('modifier_id', models.CharField(blank=True, max_length=20, null=True)),
                ('earned_credits', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('publish_grades', models.CharField(blank=True, max_length=1, null=True)),
                ('ref_no', models.CharField(blank=True, max_length=45, null=True)),
                ('remarks', models.CharField(blank=True, max_length=500, null=True)),
                ('grace_marks', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'student_marks_summary',
                'managed': False,
            },
        ),
    ]
